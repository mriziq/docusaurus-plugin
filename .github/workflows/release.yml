name: Docusaurus NPM release

on:
  push:
    branches:
      - main

jobs:
  test:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: NPM install
        run: npm install --audit=false --ignore-scripts

      - name: Lint JavaScript with ESLint
        uses: a-b-r-o-w-n/eslint-action@v2.1.0
        with:
          repo-token: '${{ secrets.GITHUB_TOKEN }}'

  release:
    timeout-minutes: 10
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Automated version bump'
        uses: 'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          default: patch
          commit-message: 'Version bump to {{version}} [skip ci]'
          tag-prefix: 'v'
        
      - name: Export package version
        id: package
        run: |
          echo "package_version=`cat package.json | jq -r .version`" >> $GITHUB_OUTPUT
        shell: bash

      - run: echo ${{ steps.package.outputs.package_version }}

      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "[0-9]+\\.[0-9]+\\.[0-9]+"
          replace: ${{ steps.package.outputs.package_version }}
          regex: true
          include: 'README.md'

      - name: 'Version bump in README.md to {{version}} [skip ci]'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Version bump in README.md to ${{ steps.package.outputs.package_version }} [skip ci]'
          file_pattern: README.md

      - name: NPM install
        run: npm install --audit=false

      - uses: JS-DevTools/npm-publish@v2.2.0
        id: publish
        with:
          token: ${{ secrets.NPM_TOKEN }}
          strategy: all
          dry-run: false
          access: 'public'
          ignore-scripts: false

      - if: steps.publish.outputs.type
        run: |
          echo "Version changed: ${{ steps.publish.outputs.old-version }} => ${{ steps.publish.outputs.version }}"

      - name: Create new release
        if: steps.publish.outputs.type
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: 'v${{ steps.publish.outputs.version }}'
          release_name: 'v${{ steps.publish.outputs.version }}'
          draft: false
          prerelease: false
